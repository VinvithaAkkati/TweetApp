{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinvi\\\\Desktop\\\\CC\\\\Cognizant Project\\\\TweetApp_React\\\\src\\\\components\\\\Tweet\\\\Comment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport Avatar from \"@mui/material/Avatar\";\nimport IconButton from '@mui/material/IconButton';\nimport Typography from \"@mui/material/Typography\";\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from \"@mui/material/CardContent\";\nimport TextField from \"@mui/material/TextField\";\nimport ForumOutlinedIcon from \"@mui/icons-material/ForumOutlined\";\nimport Grid from '@mui/material/Grid';\nimport Item from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comment = props => {\n  _s();\n\n  const [tweet, setTweet] = useState(JSON.parse(props.data));\n  const [ReplyMessage, setComment] = useState(\"\");\n  const dateFormat = {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"2-digit\"\n  };\n  const Replied_userId = sessionStorage.getItem(\"email\");\n  fetch(\"https://tweetbackend.azurewebsites.net/Tweets/\" + Replied_userId + \"/get/\" + tweet.tweetId, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/JSON\",\n      Accept: \"application/JSON\",\n      Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n    }\n  }).then(result => result.json()).then(data => setTweet(data));\n\n  const postComment = async e => {\n    e.preventDefault();\n    let cmtObject = {\n      Replied_userId,\n      ReplyMessage\n    };\n    await fetch(\"https://tweetbackend.azurewebsites.net/Tweets/\" + Replied_userId + \"/reply/\" + tweet.tweetId, {\n      method: \"POST\",\n      body: JSON.stringify(cmtObject),\n      headers: {\n        \"Content-Type\": \"application/JSON\",\n        Accept: \"application/JSON\",\n        Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n      }\n    }).then(setComment(\"\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        marginBottom: \"5pt\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            bgcolor: \"red\"\n          },\n          children: tweet.creatorId.split(\"@\")[0][0].toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this),\n        title: tweet.creatorId.split(\"@\")[0],\n        subheader: new Date(tweet.createTime).toLocaleDateString(\"en-us\", dateFormat),\n        style: {\n          backgroundColor: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [tweet.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), tweet.tags]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              label: \"Comment\",\n              variant: \"filled\",\n              value: ReplyMessage,\n              size: \"large\",\n              onChange: e => setComment(e.target.value),\n              style: {\n                backgroundColor: \"white\",\n                borderRadius: 8\n              },\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            sx: {\n              textAlign: \"center\",\n              marginTop: \"4pt\"\n            },\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: postComment,\n              children: /*#__PURE__*/_jsxDEV(ForumOutlinedIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), tweet.replys.reverse().map(t => /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: \"green\"\n            },\n            children: t.replied_userId.split(\"@\")[0][0].toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 19\n          }, this),\n          title: t.replied_userId.split(\"@\")[0],\n          subheader: new Date(t.reply_Time).toLocaleDateString(\"en-us\", dateFormat),\n          style: {\n            backgroundColor: \"white\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: t.replyMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this)]\n      }, t.replied_userId + t.reply_Time, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comment, \"KmhVzRaLcR0FfcMg6i2BBfFnNuE=\");\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","Card","Avatar","IconButton","Typography","CardHeader","CardContent","TextField","ForumOutlinedIcon","Grid","Item","Comment","props","tweet","setTweet","JSON","parse","data","ReplyMessage","setComment","dateFormat","year","month","day","hour","minute","Replied_userId","sessionStorage","getItem","fetch","tweetId","method","headers","Accept","Authorization","then","result","json","postComment","e","preventDefault","cmtObject","body","stringify","marginBottom","bgcolor","creatorId","split","toUpperCase","Date","createTime","toLocaleDateString","backgroundColor","content","tags","target","value","borderRadius","textAlign","marginTop","replys","reverse","map","t","replied_userId","reply_Time","replyMessage"],"sources":["C:/Users/vinvi/Desktop/CC/Cognizant Project/TweetApp_React/src/components/Tweet/Comment.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport ForumOutlinedIcon from \"@mui/icons-material/ForumOutlined\";\r\nimport Grid from '@mui/material/Grid';\r\nimport Item from \"./style\";\r\n\r\nconst Comment = (props) => {\r\n  const [tweet, setTweet] = useState(JSON.parse(props.data));\r\n  const [ReplyMessage, setComment] = useState(\"\");\r\n  const dateFormat = {\r\n    year: \"numeric\",\r\n    month: \"short\",\r\n    day: \"numeric\",\r\n    hour: \"numeric\",\r\n    minute: \"2-digit\",\r\n  };\r\n  const Replied_userId = sessionStorage.getItem(\"email\");\r\n\r\n  fetch(\r\n    \"https://tweetbackend.azurewebsites.net/Tweets/\" + Replied_userId + \"/get/\" + tweet.tweetId,\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/JSON\",\r\n        Accept: \"application/JSON\",\r\n        Authorization: \"Bearer \" + sessionStorage.getItem(\"token\"),\r\n      },\r\n    }\r\n  )\r\n    .then((result) => result.json())\r\n    .then((data) => setTweet(data));\r\n\r\n  const postComment = async (e) => {\r\n    e.preventDefault();\r\n    let cmtObject = { Replied_userId, ReplyMessage };\r\n    await fetch(\r\n      \"https://tweetbackend.azurewebsites.net/Tweets/\" +\r\n        Replied_userId +\r\n        \"/reply/\" +\r\n        tweet.tweetId,\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify(cmtObject),\r\n        headers: {\r\n          \"Content-Type\": \"application/JSON\",\r\n          Accept: \"application/JSON\",\r\n          Authorization: \"Bearer \" + sessionStorage.getItem(\"token\"),\r\n        },\r\n      }\r\n    ).then(setComment(\"\"));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card style={{ marginBottom: \"5pt\" }}>\r\n          <CardHeader\r\n            avatar={\r\n              <Avatar sx={{ bgcolor: \"red\" }}>\r\n                {tweet.creatorId.split(\"@\")[0][0].toUpperCase()}\r\n              </Avatar>\r\n            }\r\n            title={tweet.creatorId.split(\"@\")[0]}\r\n            subheader={new Date(tweet.createTime).toLocaleDateString(\r\n              \"en-us\",\r\n              dateFormat\r\n            )}\r\n            style={{ backgroundColor: \"white\" }}\r\n          />\r\n          <CardContent>\r\n            <Typography variant=\"body2\">\r\n              {tweet.content}\r\n              <br />\r\n              <br />\r\n              {tweet.tags}\r\n            </Typography>\r\n          </CardContent>\r\n          <Grid container spacing={2}>\r\n          <Grid item xs={10}>\r\n          <Item>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Comment\"\r\n            variant=\"filled\"\r\n            value={ReplyMessage}\r\n            size=\"large\"\r\n            onChange={(e) => setComment(e.target.value)}\r\n            style={{ backgroundColor: \"white\", borderRadius: 8}}\r\n            fullWidth\r\n          />\r\n          </Item>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Item sx={{textAlign: \"center\", marginTop:\"4pt\"}}>\r\n          <IconButton onClick={postComment}>\r\n            <ForumOutlinedIcon />\r\n          </IconButton>\r\n          </Item>\r\n        </Grid>\r\n          </Grid>\r\n          </Card>\r\n          {tweet.replys.reverse().map((t) => (\r\n            <Card>\r\n            <React.Fragment key={t.replied_userId + t.reply_Time}>\r\n            <CardHeader\r\n                avatar={\r\n                  <Avatar sx={{ bgcolor: \"green\" }}>\r\n                    {t.replied_userId.split(\"@\")[0][0].toUpperCase()}\r\n                  </Avatar>\r\n                }\r\n                title={t.replied_userId.split(\"@\")[0]}\r\n                subheader={new Date(t.reply_Time).toLocaleDateString(\r\n                  \"en-us\",\r\n                  dateFormat\r\n                )}\r\n                style= {{backgroundColor:\"white\"}}\r\n              />\r\n              <CardContent >\r\n              <Typography variant=\"body2\">\r\n                {t.replyMessage}\r\n              </Typography>\r\n              </CardContent>\r\n            </React.Fragment>\r\n            </Card>\r\n          ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}